import streamlit as st

# --- Preguntas y opciones ---
preguntas = [
    ("¬øQu√© actividad disfrutas m√°s?", ["Leer art√≠culos cient√≠ficos", "Pintar o dibujar", "Reparar cosas", "Ayudar a personas"]),
    ("¬øQu√© asignatura prefieres?", ["Matem√°ticas", "Arte", "Tecnolog√≠a", "Psicolog√≠a"]),
    ("¬øC√≥mo te gusta trabajar?", ["Analizando datos", "Creando cosas nuevas", "Con herramientas", "En equipo con personas"]),
    ("¬øQu√© hobby te interesa m√°s?", ["Resolver acertijos", "Tocar un instrumento", "Armar circuitos", "Voluntariado"]),
    ("¬øQu√© valoras m√°s en un trabajo?", ["Descubrimiento", "Expresi√≥n", "Precisi√≥n", "Impacto social"]),
    ("¬øCon qu√© palabra te identificas m√°s?", ["L√≥gico", "Creativo", "Pr√°ctico", "Emp√°tico"])
]

# --- Mapeo a perfiles ---
perfil_map = {
    "Leer art√≠culos cient√≠ficos": "cient√≠fico",
    "Matem√°ticas": "cient√≠fico",
    "Analizando datos": "cient√≠fico",
    "Resolver acertijos": "cient√≠fico",
    "Descubrimiento": "cient√≠fico",
    "L√≥gico": "cient√≠fico",
    "Pintar o dibujar": "art√≠stico",
    "Arte": "art√≠stico",
    "Creando cosas nuevas": "art√≠stico",
    "Tocar un instrumento": "art√≠stico",
    "Expresi√≥n": "art√≠stico",
    "Creativo": "art√≠stico",
    "Reparar cosas": "t√©cnico",
    "Tecnolog√≠a": "t√©cnico",
    "Con herramientas": "t√©cnico",
    "Armar circuitos": "t√©cnico",
    "Precisi√≥n": "t√©cnico",
    "Pr√°ctico": "t√©cnico",
    "Ayudar a personas": "social",
    "Psicolog√≠a": "social",
    "En equipo con personas": "social",
    "Voluntariado": "social",
    "Impacto social": "social",
    "Emp√°tico": "social"
}

# --- Recomendaciones ---
recomendaciones = {
    "cient√≠fico": "üî¨ Perfil Cient√≠fico: Podr√≠as destacar en √°reas como F√≠sica, Matem√°ticas, Biolog√≠a, Ingenier√≠a o Investigaci√≥n.",
    "art√≠stico": "üé® Perfil Art√≠stico: Podr√≠as sobresalir en Dise√±o, M√∫sica, Artes Visuales, Publicidad o Cine.",
    "t√©cnico": "üîß Perfil T√©cnico: Carreras como Mecatr√≥nica, Rob√≥tica, Sistemas o Mantenimiento son una excelente opci√≥n.",
    "social": "üë• Perfil Social: Psicolog√≠a, Educaci√≥n, Trabajo Social o Comunicaci√≥n podr√≠an ser tu vocaci√≥n."
}

# --- Estado inicial seguro ---
if "respuestas" not in st.session_state:
    st.session_state.respuestas = []

if "finalizado" not in st.session_state:
    st.session_state.finalizado = False

# --- T√≠tulo y progreso ---
st.title("üß≠ Test Vocacional Interactivo")
progreso = len(st.session_state.respuestas)
st.progress(progreso / len(preguntas))

# --- L√≥gica principal ---
if not st.session_state.finalizado:
    if progreso < len(preguntas):
        pregunta, opciones = preguntas[progreso]
        st.write(f"**{pregunta}**")
        seleccion = st.radio("Selecciona una opci√≥n:", opciones, key=f"preg_{progreso}")

        if st.button("Siguiente"):
            st.session_state.respuestas.append(seleccion)

    if len(st.session_state.respuestas) == len(preguntas):
        st.session_state.finalizado = True

# --- Mostrar resultado ---
if st.session_state.finalizado:
    conteo = {"cient√≠fico": 0, "art√≠stico": 0, "t√©cnico": 0, "social": 0}
    for r in st.session_state.respuestas:
        perfil = perfil_map.get(r)
        if perfil:
            conteo[perfil] += 1
    perfil_final = max(conteo, key=conteo.get)

    st.success("‚úÖ Test completado.")
    st.markdown(f"### üîé Tu perfil vocacional dominante es: **{perfil_final.upper()}**")
    st.info(recomendaciones[perfil_final])

    st.subheader("üìã Respuestas seleccionadas:")
    for i, r in enumerate(st.session_state.respuestas):
        st.write(f"{i+1}. {preguntas[i][0]} ‚Üí {r}")

    if st.button("üîÑ Reiniciar"):
        st.session_state.respuestas = []
        st.session_state.finalizado = False